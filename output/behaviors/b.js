var Align;Align=function(){function Align(options){core.extend(this,core.defaults(options||{},{enabled:true,agents:[],radius:200,weight:1,chance:1}))}Align.prototype.apply=function(agent){var average,count,distSq,i,len,other,radiusSq,ref,steer;if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}count=0;average=new Vector;radiusSq=this.radius*this.radius;ref=this.agents;for(i=0,len=ref.length;i<len;i++){other=ref[i];if(!(other!==agent)){continue}distSq=Vector.distSq(agent,other);if(distSq>0&&distSq<radiusSq){average.add(other.vel);++count}}if(count>0){average.scale(1/count);steer=Vector.sub(average,agent.vel);steer.scale(this.weight);return agent.acc.add(steer)}};return Align}();var Avoid;Avoid=function(){function Avoid(options){core.extend(this,core.defaults(options||{},{enabled:true,obstacles:[],radius:200,weight:1,chance:1}))}Avoid.prototype.apply=function(agent){var a,b,circ,feeler,i,intersect,len,line,obstacle,p,ref,results;line=function(v1,v2,col,label,width){var mid;if(label==null){label=""}if(width==null){width=1}ctx.save();ctx.beginPath();ctx.translate(v1.x,v1.y);ctx.moveTo(0,0);ctx.lineTo(v2.x,v2.y);ctx.closePath();ctx.strokeStyle=col;ctx.lineWidth=width;ctx.stroke();mid=v2.clone().scale(.5);ctx.fillStyle="#ff00ff";ctx.fillText(label,mid.x+5,mid.y);return ctx.restore()};circ=function(pos,rad,col){ctx.beginPath();ctx.arc(pos.x,pos.y,rad,0,Math.PI*2);ctx.closePath();ctx.strokeStyle=col;ctx.lineWidth=4;return ctx.stroke()};if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}feeler=agent.vel.clone().norm().scale(this.radius);feeler.rotate(.2);line(agent,feeler,"rgba(255,0,255,0.5)","v",5);ref=this.obstacles;results=[];for(i=0,len=ref.length;i<len;i++){obstacle=ref[i];a=Vector.sub(obstacle,agent);p=Vector.project(a,feeler);b=Vector.sub(p,a);line(agent,a,"#00ff00","a");line(obstacle,b,"#ff00ff","b");line(agent,p,"#0000ff","p");intersect=b.mag()<obstacle.radius;intersect=intersect&&this.radius+obstacle.radius>p.mag();if(intersect){circ(obstacle,obstacle.radius,"#ff00ff");a.rotate(-agent.vel.angle());line(agent,a,"#00ff00","a");results.push(console.log(a.norm().x))}else{results.push(void 0)}}return results};return Avoid}();var Bounds;Bounds=function(){Bounds.WRAP="wrap";function Bounds(options){core.extend(this,core.defaults(options||{},{enabled:true,min:new Vector(0,0),max:new Vector(1e3,1e3),type:Bounds.WRAP,chance:1}))}Bounds.prototype.apply=function(agent){if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}if(agent.x+agent.radius<this.min.x){agent.x=this.max.x+agent.radius}else if(agent.x-agent.radius>this.max.x){agent.x=this.min.x-agent.radius}if(agent.y+agent.radius<this.min.y){return agent.y=this.max.y+agent.radius}else if(agent.y-agent.radius>this.max.y){return agent.y=this.min.y-agent.radius}};return Bounds}();var Cohere;Cohere=function(){function Cohere(options){core.extend(this,core.defaults(options||{},{enabled:true,agents:[],radius:200,weight:1,chance:1}))}Cohere.prototype.apply=function(agent){var average,count,distSq,i,len,other,radiusSq,ref,steer;if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}count=0;average=new Vector;radiusSq=this.radius*this.radius;ref=this.agents;for(i=0,len=ref.length;i<len;i++){other=ref[i];if(!(other!==agent)){continue}distSq=Vector.distSq(agent,other);if(distSq>0&&distSq<radiusSq){average.add(other);++count}}if(count>0){average.scale(1/count);steer=Vector.sub(average,agent);steer.scale(this.weight);return agent.acc.add(steer)}};return Cohere}();var Flee;Flee=function(){function Flee(options){core.extend(this,core.defaults(options||{},{enabled:true,target:new Vector,radius:100,weight:1,chance:1}))}Flee.prototype.apply=function(agent){var desired,distanceSq,radiusSq,steer;if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}desired=Vector.sub(agent,this.target);distanceSq=desired.magSq();radiusSq=this.radius*this.radius;if(distanceSq<radiusSq){desired.norm();desired.scale(utils.map(distanceSq,radiusSq,0,0,agent.maxSpeed));steer=Vector.sub(desired,agent.vel);steer.scale(this.weight);return agent.acc.add(steer)}};return Flee}();var Seek;Seek=function(){function Seek(options){core.extend(this,core.defaults(options||{},{enabled:true,target:new Vector,braking:100,radius:999999,weight:1,chance:1}))}Seek.prototype.apply=function(agent){var brakingSq,desired,distanceSq,radiusSq,steer;if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}desired=Vector.sub(this.target,agent);distanceSq=desired.magSq();radiusSq=this.radius*this.radius;if(distanceSq>1e-6&&distanceSq<radiusSq){desired.norm();brakingSq=this.braking*this.braking;if(distanceSq<brakingSq){desired.scale(utils.map(distanceSq,0,brakingSq,0,agent.maxSpeed))}else{desired.scale(agent.maxSpeed)}steer=Vector.sub(desired,agent.vel);steer.scale(this.weight);return agent.acc.add(steer)}};return Seek}();var Separate;Separate=function(){function Separate(options){core.extend(this,core.defaults(options||{},{enabled:true,agents:[],radius:200,weight:1,chance:1}))}Separate.prototype.apply=function(agent){var desired,distSq,i,len,other,radii,radiiSq,ref,steer;if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}steer=new Vector;ref=this.agents;for(i=0,len=ref.length;i<len;i++){other=ref[i];if(!(other!==agent)){continue}radii=this.radius+agent.radius+other.radius;radiiSq=radii*radii;distSq=Vector.distSq(agent,other);if(distSq>0&&distSq<radiiSq){desired=Vector.sub(agent,other);desired.norm();desired.scale(utils.map(distSq,radiiSq,0,0,agent.maxSpeed));steer.add(desired)}}steer.scale(this.weight);return agent.acc.add(steer)};return Separate}();var Wander;Wander=function(){function Wander(options){core.extend(this,core.defaults(options||{},{enabled:true,theta:Math.random(Math.PI*2),distance:80,radius:20,jitter:.5,weight:1,chance:1}))}Wander.prototype.apply=function(agent){var center,steer,target;if(!this.enabled||this.chance<1&&Math.random()>this.chance){return}this.theta+=utils.random(-this.jitter,this.jitter);center=agent.vel.clone().norm();center.scale(this.distance);center.add(agent);target=new Vector(1,1);target.rotate(this.theta);target.scale(this.radius);target.add(center);steer=Vector.sub(target,agent);steer.sub(agent.vel);steer.scale(this.weight);return agent.acc.add(steer)};return Wander}();
